name: Monitor Website

on:
  workflow_dispatch:       # Allows manual triggering of the workflow
  schedule:
    - cron: '*/10 * * * *' # Runs every 10 minutes

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Restore cached hash
      - name: Restore cached hash
        uses: actions/cache@v3
        with:
          path: hash.txt
          key: website-monitor-hash
          restore-keys: |
            website-monitor-hash

      # Step 3: Debug hash restoration
      - name: Debug hash restoration
        run: |
          echo "Checking restored hash..."
          cat hash.txt || echo "No hash.txt found in cache."

      # Step 4: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Step 5: Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Step 6: Run the monitoring script
      - name: Run script
        env:
          URL: ${{ secrets.URL }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          GMAIL_ADDRESS: ${{ secrets.GMAIL_ADDRESS }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: python monitor.py

      # Step 7: Verify hash.txt creation
      - name: Verify hash.txt creation
        run: |
          if [ ! -f hash.txt ]; then
            echo "Error: hash.txt was not created by the script."
            exit 1
          fi

      # Step 8: Update cached hash
      - name: Update cached hash
        uses: actions/cache@v3
        with:
          path: hash.txt
          key: website-monitor-hash
